default_platform(:ios)

platform :ios do
  desc "Build the app"
  lane :build do
    cocoapods
    build_ios_app(
      workspace: "Sergio.xcworkspace",
      scheme: "Sergio",
      configuration: "Debug",
      clean: true,
      output_directory: "build",
      skip_codesigning: true,
      skip_package_ipa: true
    )
  end

  desc "Run unit tests only (without cocoapods)"
  lane :unit_test_only do
    scan(
      workspace: "Sergio.xcworkspace",
      scheme: "Sergio",
      destination: "platform=iOS Simulator,OS=latest",
      clean: true,
      skip_build: false,
      result_bundle: true,
      output_directory: "test_output",
      only_testing: ["SergioTests"],
      code_coverage: true,
      output_types: "html,junit"
    )
  end

  desc "Run unit tests only"
  lane :unit_test do
    cocoapods
    scan(
      workspace: "Sergio.xcworkspace",
      scheme: "Sergio",
      destination: "platform=iOS Simulator,id=BD104AFC-1D8A-43E6-BEA2-DF9CD117DD73",
      clean: true,
      skip_build: false,
      result_bundle: true,
      output_directory: "test_output"
    )
  end

  desc "Run UI tests only"
  lane :ui_test do
    cocoapods
    scan(
      workspace: "Sergio.xcworkspace",
      scheme: "SergioUITests",
      destination: "platform=iOS Simulator,OS=latest",
      clean: true,
      skip_build: false,
      result_bundle: true,
      output_directory: "test_output"
    )
  end

  desc "CI pipeline - build and unit tests only"
  lane :ci do
    cocoapods
    build_ios_app(
      workspace: "Sergio.xcworkspace",
      scheme: "Sergio",
      configuration: "Debug",
      clean: true,
      output_directory: "build",
      skip_codesigning: true,
      skip_package_ipa: true
    )
    
    scan(
      workspace: "Sergio.xcworkspace",
      scheme: "Sergio",
      destination: "platform=iOS Simulator,OS=latest",
      clean: false,
      skip_build: true,
      result_bundle: true,
      output_directory: "test_output",
      only_testing: ["SergioTests"]
    )
  end

  desc "CI pipeline - unit tests only (no build, no UI tests)"
  lane :ci_unit_tests_only do
    scan(
      workspace: "Sergio.xcworkspace",
      scheme: "Sergio",
      destination: "generic/platform=iOS Simulator",
      clean: true,
      skip_build: false,
      result_bundle: true,
      output_directory: "test_output",
      only_testing: ["SergioTests"]
    )
  end

  desc "GitHub Actions - unit tests only (most compatible)"
  lane :github_actions do
    scan(
      workspace: "Sergio.xcworkspace",
      scheme: "Sergio",
      destination: "platform=iOS Simulator,name=iPhone 16,OS=latest",
      clean: true,
      skip_build: false,
      result_bundle: true,
      output_directory: "test_output",
      only_testing: ["SergioTests"],
      skip_package_dependencies_resolution: false,
      disable_package_automatic_updates: true,
      skip_detect_devices: true,
      ensure_devices_found: false,
      code_coverage: true,
      output_types: "html,junit"
    )
  end

  desc "Run tests with detailed coverage report"
  lane :coverage do
    scan(
      workspace: "Sergio.xcworkspace",
      scheme: "Sergio",
      destination: "platform=iOS Simulator,OS=latest",
      clean: true,
      skip_build: false,
      result_bundle: true,
      output_directory: "test_output",
      only_testing: ["SergioTests"],
      code_coverage: true,
      output_types: "html,junit",
      output_files: "report.html,report.xml"
    )
    
    # Generate additional coverage report
    sh "xcrun xccov view --report test_output/Sergio.xcresult > test_output/coverage.txt"
    
    UI.success "📊 Coverage report generated!"
    UI.success "📁 HTML Report: test_output/report.html"
    UI.success "📄 Text Report: test_output/coverage.txt"
    UI.success "📋 JUnit Report: test_output/report.xml"
  end

  desc "Clean build artifacts"
  lane :clean do
    clean_build_artifacts
    sh "rm -rf build test_output"
  end
end
