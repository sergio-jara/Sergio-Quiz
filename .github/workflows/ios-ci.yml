name: iOS CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        
    - name: Install CocoaPods
      run: |
        gem install cocoapods
        pod --version
        
    - name: Install dependencies
      run: |
        pod install --repo-update
        
    - name: Build project
      run: |
        xcodebuild clean build \
          -workspace dynamox.xcworkspace \
          -scheme dynamox \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -derivedDataPath build \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Run unit tests
      run: |
        xcodebuild test \
          -workspace dynamox.xcworkspace \
          -scheme dynamox \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -derivedDataPath build \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Run UI tests
      run: |
        xcodebuild test \
          -workspace dynamox.xcworkspace \
          -scheme dynamoxUITests \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -derivedDataPath build \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: build/
        retention-days: 7

  code-quality:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run SwiftLint (if configured)
      run: |
        # Uncomment if you have SwiftLint configured
        # swift run swiftlint lint --reporter github-actions-logging
        echo "SwiftLint check skipped - not configured"
        
    - name: Check code coverage
      run: |
        echo "Code coverage analysis would go here"
        echo "Consider using xcov or similar tools"
